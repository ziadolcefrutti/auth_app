name: "Build & Release (Windows)"

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master, clean_code]

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Generate Localization Files
        run: flutter gen-l10n

      - name: Run Tests with Coverage
        run: flutter test --coverage

      - name: Show Coverage Percentage
        shell: pwsh
        run: |
          $content = Get-Content coverage/lcov.info
          $linesHit = 0
          $linesFound = 0

          foreach ($line in $content) {
            if ($line -match "^LH:(\d+)$") {
              $linesHit = [int]$Matches[1]
            }
            elseif ($line -match "^LF:(\d+)$") {
              $linesFound = [int]$Matches[1]
            }
          }

          if ($linesFound -eq 0) {
            Write-Error "No lines found in coverage report"
            exit 1
          }

          $coverage = [math]::Round(($linesHit / $linesFound) * 100, 2)
          echo "üìä Code Coverage: $coverage%"

          # Optional: Fail if below threshold
          $minimumCoverage = 80
          if ($coverage -lt $minimumCoverage) {
            Write-Error "‚ùå Coverage below $minimumCoverage%. Current: $coverage%"
            exit 1
          }

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Build APK (Release)
        run: flutter build apk --release

      - name: Push APK to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/apk/release/*.apk
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
